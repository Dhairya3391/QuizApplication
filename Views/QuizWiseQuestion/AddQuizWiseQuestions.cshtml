@using System.Data
@model System.Data.DataTable
@{
    var addedQuestions = ViewBag.AddedQuestions as List<int> ?? new List<int>();
}

<div class="pagetitle">
    <h1>Quiz Wise Question Add</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="QuizWiseQuestionList" asp-controller="QuizWiseQuestion">Quiz Wise
                    Questions</a></li>
            <li class="breadcrumb-item active">Add Quiz Wise Questions</li>
        </ol>
    </nav>
</div>

<section class="section">
    <div class="row">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Quiz Name: @ViewBag.QuizName</h5>
                <p>Total Questions Allowed: <span id="totalQuestions">@ViewBag.TotalQuestions</span></p>
                <p>Selected Questions: <span id="selectedQuestionsCount">0</span></p>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <form id="quizForm" method="post" asp-action="SaveQuizQuestions" asp-controller="QuizWiseQuestion">
                    <input type="hidden" name="quizId" value="@ViewBag.QuizId"/>

                    <table class="table">
                        <thead>
                        <tr>
                            <th><input type="checkbox" id="selectAll"/></th>
                            <th>Question</th>
                            <th>Option A</th>
                            <th>Option B</th>
                            <th>Option C</th>
                            <th>Option D</th>
                            <th>Correct Option</th>
                            <th>Marks</th>
                        </tr>
                        </thead>

                        <tbody>
                        @foreach (DataRow datarow in Model.Rows)
                        {
                            var questionId = Convert.ToInt32(datarow["QuestionId"]);
                            var isChecked = addedQuestions.Contains(questionId);

                            <tr>
                                <td>
                                    <input type="checkbox" class="question-checkbox" name="selectedQuestions"
                                           value="@questionId" @(isChecked ? "checked" : "")/>
                                </td>
                                <td>@datarow["QuestionText"]</td>
                                <td>@datarow["OptionA"]</td>
                                <td>@datarow["OptionB"]</td>
                                <td>@datarow["OptionC"]</td>
                                <td>@datarow["OptionD"]</td>
                                <td>@datarow["CorrectOption"]</td>
                                <td>@datarow["QuestionMarks"]</td>
                            </tr>
                        }
                        </tbody>
                    </table>

                    <div class="text-start">
                        <button type="submit" class="btn btn-primary" id="submitBtn" disabled>Save</button>
                        <a href="@Url.Action("QuizWiseQuestionList", "QuizWiseQuestion")" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let totalAllowed = parseInt(document.getElementById("totalQuestions").innerText);
        let checkboxes = document.querySelectorAll(".question-checkbox");
        let selectedCountSpan = document.getElementById("selectedQuestionsCount");
        let submitBtn = document.getElementById("submitBtn");
        let selectAllCheckbox = document.getElementById("selectAll");

        function updateSelectedCount() {
            let selectedCount = document.querySelectorAll(".question-checkbox:checked").length;
            selectedCountSpan.innerText = selectedCount;
            submitBtn.disabled = selectedCount === 0;
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener("change", function () {
                if (this.checked && document.querySelectorAll(".question-checkbox:checked").length > totalAllowed) {
                    alert("You cannot select more than " + totalAllowed + " questions.");
                    this.checked = false;
                }
                updateSelectedCount();
            });
        });

        selectAllCheckbox.addEventListener("change", function () {
            checkboxes.forEach(checkbox => {
                checkbox.checked = this.checked && document.querySelectorAll(".question-checkbox:checked").length < totalAllowed;
            });
            updateSelectedCount();
        });

        updateSelectedCount();
    });
</script>
